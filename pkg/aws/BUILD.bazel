load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
load("@com_github_jmhodges_bazel_gomock//:gomock.bzl", "gomock")

go_library(
    name = "go_default_library",
    srcs = [
        "aws.go",
        "interface.go",
        "list.go",
        "session.go",
        "ssh.go",
    ],
    importpath = "github.com/danmx/sigil/pkg/aws",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/aws/helpers:go_default_library",
        "//pkg/aws/log:go_default_library",
        "//pkg/os:go_default_library",
        "@com_github_aws_aws_sdk_go//aws:go_default_library",
        "@com_github_aws_aws_sdk_go//aws/client:go_default_library",
        "@com_github_aws_aws_sdk_go//aws/credentials/stscreds:go_default_library",
        "@com_github_aws_aws_sdk_go//aws/session:go_default_library",
        "@com_github_aws_aws_sdk_go//service/ec2:go_default_library",
        "@com_github_aws_aws_sdk_go//service/ec2/ec2iface:go_default_library",
        "@com_github_aws_aws_sdk_go//service/ec2instanceconnect:go_default_library",
        "@com_github_aws_aws_sdk_go//service/ec2instanceconnect/ec2instanceconnectiface:go_default_library",
        "@com_github_aws_aws_sdk_go//service/ssm:go_default_library",
        "@com_github_aws_aws_sdk_go//service/ssm/ssmiface:go_default_library",
        "@com_github_sirupsen_logrus//:go_default_library",
    ],
)

go_test(
    name = "go_default_test",
    srcs = [
        "aws_test.go",
        "ec2_aws_mock_test.go",
        "ec2instanceconnect_aws_mock_test.go",
        "helpers_mock_test.go",
        "list_test.go",
        "session_test.go",
        "ssh_test.go",
        "ssm_aws_mock_test.go",
    ],
    embed = [":go_default_library"],
    deps = [
        "@com_github_aws_aws_sdk_go//aws:go_default_library",
        "@com_github_aws_aws_sdk_go//aws/request:go_default_library",
        "@com_github_aws_aws_sdk_go//service/ec2:go_default_library",
        "@com_github_aws_aws_sdk_go//service/ec2instanceconnect:go_default_library",
        "@com_github_aws_aws_sdk_go//service/ssm:go_default_library",
        "@com_github_golang_mock//gomock:go_default_library",
        "@com_github_stretchr_testify//assert:go_default_library",
    ],
)

gomock(
    name = "mock_helpers",
    out = "helpers_mock_test.go",
    interfaces = [
        "OSExecIface",
        "OSIface",
    ],
    library = "//pkg/aws/helpers:go_default_library",
    package = "aws",
    self_package = "github.com/danmx/sigil/pkg/aws",
)

gomock(
    name = "mock_aws_ec2",
    out = "ec2_aws_mock_test.go",
    interfaces = [
        "EC2API",
    ],
    library = "@com_github_aws_aws_sdk_go//service/ec2/ec2iface:go_default_library",
    package = "aws",
    self_package = "github.com/danmx/sigil/pkg/aws",
)

gomock(
    name = "mock_aws_ssm",
    out = "ssm_aws_mock_test.go",
    interfaces = [
        "SSMAPI",
    ],
    library = "@com_github_aws_aws_sdk_go//service/ssm/ssmiface:go_default_library",
    package = "aws",
    self_package = "github.com/danmx/sigil/pkg/aws",
)

gomock(
    name = "mock_aws_ec2instanceconnect",
    out = "ec2instanceconnect_aws_mock_test.go",
    interfaces = [
        "EC2InstanceConnectAPI",
    ],
    library = "@com_github_aws_aws_sdk_go//service/ec2instanceconnect/ec2instanceconnectiface:go_default_library",
    package = "aws",
    self_package = "github.com/danmx/sigil/pkg/aws",
)
